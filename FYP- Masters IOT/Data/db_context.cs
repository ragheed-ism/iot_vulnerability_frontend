using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;
using System;


public class ApplicationDbContext : DbContext
{
    private readonly ILogger<ApplicationDbContext> _logger;
    public ApplicationDbContext(DbContextOptions<ApplicationDbContext> options, ILogger<ApplicationDbContext> logger)
        : base(options)
    {
        _logger = logger;
    }

    public DbSet<Category> Category { get; set; }
    public DbSet<Weakness> Weakness { get; set; }
    public DbSet<Vulnerability> Vulnerability { get; set; }
    public DbSet<IOT_Category> IOT_Category { get; set; }
    public DbSet<CAPEC> CAPEC { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    {
        // Configure the logger for SQL queries
        optionsBuilder.UseLoggerFactory(LoggerFactory.Create(builder =>
        {
            builder.AddConsole(); // Log SQL queries to the console
        }));

        base.OnConfiguring(optionsBuilder);
    }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);
        modelBuilder.Entity<Category>().ToTable("category");
    }
}
